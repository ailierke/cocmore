<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="ehcache.xsd" updateCheck="true"
	monitoring="autodetect">

	<!-- <cacheManagerPeerProviderFactory class="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory" 
		properties="peerDiscovery=manual, rmiUrls=//10.0.0.28:40001/commonCache" 
		/> <cacheManagerPeerListenerFactory class="net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory" 
		properties="hostName=localhost, port=40001, socketTimeoutMillis=2000" /> -->
	<cacheManagerPeerProviderFactory
		class="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory"
		properties="peerDiscovery=automatic, multicastGroupAddress=230.0.0.1,
multicastGroupPort=4446, timeToLive=32" />

	<!-- <diskStore path="java.io.tmpdir" /> -->
	<diskStore path="d:/cachetmpdir" />

	<cache name="commonCache" maxEntriesLocalHeap="10"
		maxElementsOnDisk="1000" eternal="false" overflowToDisk="false"
		timeToIdleSeconds="300" timeToLiveSeconds="30">
		<!-- <cacheEventListenerFactory class="net.sf.ehcache.distribution.RMICacheReplicatorFactory" 
			properties="replicateAsynchronously=true, replicatePuts=true, replicateUpdates=true, 
			replicateUpdatesViaCopy=false, replicateRemovals=true " /> -->

	</cache>

</ehcache>

<!-- name:缓存名称。 maxElementsInMemory：缓存最大个数。 eternal:对象是否永久有效，一但设置了，timeout将不起作用。 
	timeToIdleSeconds：设置对象在失效前的允许闲置时间（单位：秒）。仅当eternal=false对象不是永久有效时使用，可选属性，默认值是0，也就是可闲置时间无穷大。 
	timeToLiveSeconds：设置对象在失效前允许存活时间（单位：秒）。最大时间介于创建时间和失效时间之间。仅当eternal=false对象不是永久有效时使用，默认是0.，也就是对象存活时间无穷大。 
	overflowToDisk：当内存中对象数量达到maxElementsInMemory时，Ehcache将会对象写到磁盘中。 diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区。 
	maxElementsOnDisk：硬盘最大缓存个数。 diskPersistent：是否缓存虚拟机重启期数据 Whether the disk 
	store persists between restarts of the Virtual Machine. The default value 
	is false. diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒。 memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用）。 
	clearOnFlush：内存数量最大时是否清除。 1、缓存的切面放在哪一层最合适（大部分情况是service，dao），其实应用在哪一层都有各自的用武之地，如： 
	（1）放在service，是缓存整个经过业务处理后的一个结果，这样的做法大大减少了系统逻辑处理，但如果业务方法里面涉及到多表操作，则比较麻烦，因为 
	要考虑缓存数据更新的问题。 （2）放在dao，大多数都放在这层，也是推荐放在这层，因为基本不用人为的考虑缓存及时更新的问题造成业务方法返回的结果不一致。只缓存数据，不牵扯 
	到业务逻辑 -->